name: "Setup"
description: "Setup the runner and prepare the git repo"
inputs:
  llvm-subset:
    description: If a a minimal subset of the llvm-project monorepo should be cloned
    required: false
    default: 'false'
  setup-uv:
    description: If uv should be set up
    required: false
    default: 'true'
  setup-kvm:
    description: If nested virtualization should be enabled (GitHub hosted runners only)
    required: false
    default: 'false'
  build-dependencies:
    description: If the dependencies required for a build should be installed
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: Clone llvm subset
      if: ${{ inputs.llvm-subset != 'false' }}
      shell: bash
      run: ferrocene/ci/scripts/clone-llvm-subset.sh
    - name: Checkout submodules
      shell: bash
      run: ferrocene/ci/scripts/checkout-submodules.sh
    - name: Change file modification time to be consistent
      shell: bash
      run: ferrocene/ci/scripts/reset-mtime-to-last-commit.sh

    - name: Install dependencies (Ubuntu)
      if: ${{ contains(runner.name, 'ubuntu') && inputs.build-dependencies != 'false' }}
      shell: bash
      run: ferrocene/ci/scripts/setup-ubuntu.sh

    - name: Install dependencies (Windows)
      if: ${{ (runner.os == 'Windows') && inputs.build-dependencies != 'false' }}
      shell: bash
      run: ferrocene/ci/scripts/setup-windows.sh

    - name: Install dependencies (macOS)
      if: ${{ (runner.os == 'macOS') && inputs.build-dependencies != 'false' }}
      shell: bash
      run: ferrocene/ci/scripts/setup-darwin.sh

    # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
    - name: Enable KVM on Linux
      if: ${{ runner.os == 'linux' && inputs.setup-kvm != 'false' }}
      shell: bash
      run: |
        set -xeo pipefail

        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Setup uv
      if: ${{ inputs.setup-uv != 'false' }}
      shell: bash
      run: ferrocene/ci/scripts/setup-uv.sh
