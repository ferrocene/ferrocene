name: Dist host
run-name: Dist (${{inputs.host-triple}})

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      host-triple:
        type: string
        description: The Rust triple of the host platform
      triples:
        type: string
        description: A comma separated list of targets to build
      runner:
        type: string
        description: The GitHub Runner to run on
      build-run-id:
        type: string
        description: The run id of the build workflow
      build-artifact:
        type: string
        description: The artifact from the build workflow
      container:
        type: string
        description: The container URI to run the build in, if any (Linux only)
      environment:
        type: string
    outputs:
      run-id:
        description: The id of the workflow run
        value: ${{ github.run_id }}
      
      artifact-dist:
        description: The name of the dist job artifact
        value: ${{ jobs.dist.outputs.artifact-name }}
      artifact-dist-usage:
        description: The name of the resource usage report artifact for the dist job
        value: ${{ jobs.dist.outputs.artifact-usage }}

      artifact-tools:
        description: The name of the tools job artifact
        value: ${{ jobs.tools.outputs.artifact-name }}
      artifact-tools-usage:
        description: The name of the resource usage report artifact for the tools job
        value: ${{ jobs.dist.outputs.artifact-usage }}

jobs:

  dist:
    runs-on: ${{ inputs.runner }}
    env:
      ARTIFACT: dist-${{inputs.host-triple}}
      ARTIFACT_USAGE: usage-dist-${{inputs.host-triple}}
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
      AWS_REGION: us-east-1
      AWS_ROLE_ARN: ${{ (github.ref == 'refs/heads/staging') && secrets.AWS_OIDC_GHA_ARN_STAGING || secrets.AWS_OIDC_GHA_ARN_TRYING }}
    outputs:
      artifact-name: ${{ env.ARTIFACT }}
      artifact-usage: ${{ env.ARTIFACT }}-usage
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr
      # https://github.com/Azure/login/issues/372#issuecomment-2056289617
      - name: Cache Azure storage token
        run: az account get-access-token --scope https://storage.azure.com/.default --output none 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume:  ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AWS_OIDC_GHA_ARN_STAGING || secrets.AWS_OIDC_GHA_ARN_TRYING }}

      - name: Restore build cache
        uses: ./.github/actions/restore-build-cache/
        with:
          build-artifact: ${{ inputs.build-artifact }}
          build-run-id: ${{ inputs.build-run-id }}

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            uv run x.py --stage 2 dist $(uv run ferrocene/ci/split-tasks.py dist)
            uv run x.py --stage 2 dist rust-std

      - uses: actions/upload-artifact@v4
        id: artifact
        with:
          name: ${{ env.ARTIFACT }}
          path: build/dist
          retention-days: 1

      - name: Upload artifacts to S3
        env:
          CIRCLE_SHA1: ${{ github.sha }}
          CIRCLE_JOB: ${{ env.ARTIFACT }}
        run: |
          ./ferrocene/ci/scripts/upload-dist-artifacts.sh
      
      - name: Generate usage report
        uses: ./.github/actions/usage-report/
        if: ${{ always() }}
        with:
          artifact: ${{ env.ARTIFACT_USAGE }}
          name: ${{ env.ARTIFACT }}

  tools:
    runs-on: ${{ inputs.runner }}
    env:
      ARTIFACT: tools-${{inputs.host-triple}}
      ARTIFACT_USAGE: usage-tools-${{inputs.host-triple}}
      FERROCENE_HOST: ${{ inputs.host-triple }}
      FERROCENE_TARGETS: ${{ inputs.triples }}
      AWS_REGION: us-east-1
    outputs:
      artifact-name: ${{ env.ARTIFACT }}
      artifact-usage: ${{ env.ARTIFACT_USAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup/
        with:
          build-dependencies: ${{ (inputs.container != '') && 'false' || 'true' }}
      
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ (github.ref == 'refs/heads/staging') && secrets.AZURE_OIDC_GHA_CLIENT_ID_STAGING || secrets.AZURE_OIDC_GHA_CLIENT_ID_TRYING }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Authenicate docker with Azure
        if: ${{ (runner.os == 'Linux') }}
        run: az acr login --name ferrocenecr
      # https://github.com/Azure/login/issues/372#issuecomment-2056289617
      - name: Cache Azure storage token
        run: az account get-access-token --scope https://storage.azure.com/.default --output none 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume:  ${{ (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/hoverbear/gha-migration') && secrets.AWS_OIDC_GHA_ARN_STAGING || secrets.AWS_OIDC_GHA_ARN_TRYING }}

      - name: Restore build cache
        uses: ./.github/actions/restore-build-cache/
        with:
          build-artifact: ${{ inputs.build-artifact }}
          build-run-id: ${{ inputs.build-run-id }}

      - name: Run
        uses: ./.github/actions/run/
        with:
          container: ${{ inputs.container }}
          # See ferrocene/ci/split-tasks.py for a list of tasks executed by this.
          script: |
            uv run x.py --stage 2 dist $(uv run ferrocene/ci/split-tasks.py dist:tools)

      - uses: actions/upload-artifact@v4
        id: artifact
        with:
          name: ${{ env.ARTIFACT }}
          path: build/dist
          retention-days: 1

      - name: Upload artifacts to S3
        env:
          CIRCLE_SHA1: ${{ github.sha }}
          CIRCLE_JOB: ${{ env.ARTIFACT }}
        run:
          ./ferrocene/ci/scripts/upload-dist-artifacts.sh

      - name: Generate usage report
        uses: ./.github/actions/usage-report/
        if: ${{ always() }}
        with:
          artifact: ${{ env.ARTIFACT_USAGE }}
          name: ${{ env.ARTIFACT }}