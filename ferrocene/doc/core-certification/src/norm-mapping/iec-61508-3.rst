.. SPDX-License-Identifier: MIT OR Apache-2.0
   SPDX-FileCopyrightText: The Ferrocene Developers

IEC 61508-3
-----------

4
~

1. The :doc:`core-certification:safety-plan/scope` specifies and justifies the SIL.
2. The core library certification excludes the requirement of having an architecture.

   .. include:: ../partials/simple-design.rst

5
~

Covered by :ref:`5.2.1 to 5.2.11 of IEC 61508-1 <norm-mapping/iec-61508-1:5.2.1>`.

6.2.1
~~~~~

Covered by :ref:`6.2 of IEC 61508-1 <norm-mapping/iec-61508-1:6.2>`.

6.2.2
~~~~~

Covered by :doc:`core-certification:safety-plan/index`.

6.2.3
~~~~~

Covered by

- :doc:`qualification-plan:development`
- :doc:`qualification-plan:change-tracking`
- :doc:`qualification-plan:infrastructure`

7.1.2.1-3
~~~~~~~~~

Covered by :ref:`Safety Plan - Lifecycle Phases Overview <safety-plan/project-setup:lifecycle phases overview>`.

7.1.2.4-6
~~~~~~~~~

Covered by :ref:`safety-plan/project-setup:v-model`.

7.1.2.7
~~~~~~~

Covered by :doc:`core-certification:norm-mapping/iec-61508-3-annex-a`.

7.1.2.8-9
~~~~~~~~~

The following relevant artefacts are included in the deliverables:

- :doc:`Code coverage report <core-certification:safety-report/code-coverage>`
- :doc:`Test results <qualification-report:rustc/index>`
- :ref:`safety-plan/requirements:quality of the doc-comments`
- `Certified core library API docs <../../api-docs/core/index.html>`_

7.2.2.1-3
~~~~~~~~~

Covered by :doc:`core-certification:safety-plan/requirements`.

7.2.2.4
~~~~~~~

N/A

.. include:: ../partials/simple-design.rst

All functions included in the subset are certified SIL2.

7.2.2.5
~~~~~~~

.. include:: ../partials/no-system.rst

7.2.2.6-9
~~~~~~~~~

N/A; the core library is a pure software library. Hardware constraints should be taken into consideration when integrating the certified core library into a hardware environment.

7.2.2.11
~~~~~~~~

N/A; There is no way to configure the core library binary after it is compiled.

7.2.2.12-13
~~~~~~~~~~~

N/A; the core library does not use, and therefore does not configure, any pre-existing software.

7.3.2.1-5
~~~~~~~~~

.. include:: ../partials/core-testing.rst

7.4.2.1
~~~~~~~

Covered by :ref:`safety-plan/project-setup:responsibility split`.

7.4.2.2-6
~~~~~~~~~

Covered by :ref:`safety-plan/requirements:doc-comments in the core library`.

7.4.2.7
~~~~~~~

.. include:: ../partials/na-library.rst

7.4.2.8-11
~~~~~~~~~~

All functions in the certified core library are deemed to be of the same SIL.

7.4.2.12-14
~~~~~~~~~~~

.. include:: ../partials/na-library.rst

7.4.3
~~~~~

N/A, therefore no architecture is needed

.. include:: ../partials/simple-design.rst

7.4.4.1-9
~~~~~~~~~

Covered by :doc:`core-certification:safety-plan/tools`.

7.4.4.10-11
~~~~~~~~~~~

Covered by :doc:`core-certification:safety-plan/programming-language`.

7.4.4.12-13
~~~~~~~~~~~

.. include:: ../partials/implicit-coding-standard.rst

7.4.4.14
~~~~~~~~

N/A; Rust macros are not automatic code generation, since they are written in source code.

7.4.4.15-18
~~~~~~~~~~~

Covered by :ref:`safety-plan/project-setup:configuration`.

7.4.4.19
~~~~~~~~

Covered by :ref:`safety-plan/project-setup:roles and responsibilities`.

7.4.5.1-2
~~~~~~~~~

Covered by :ref:`safety-plan/project-setup:responsibility split`.

7.4.5.3-5
~~~~~~~~~

.. include:: ../partials/simple-design.rst

7.4.6
~~~~~

Covered by :ref:`safety-plan/project-setup:responsibility split`.

7.4.7-8
~~~~~

.. include:: ../partials/core-testing.rst

7.5
~~~

.. include:: ../partials/core-testing.rst

7.6
~~~

See 7.8.

7.7.1
~~~~~

Objective met.

7.7.2.1-4
~~~~~~~~~

.. include:: ../partials/core-testing.rst

7.7.2.5-6
~~~~~~~~~

Covered by :ref:`safety-plan/testing-plan:coretests`.

7.7.2.7-9
~~~~~~~~~

.. include:: ../partials/core-testing.rst

7.8
~~~

Covered by

- :doc:`qualification-plan:development`
- :doc:`internal-procedures:upstream-pulls`

7.9.1
~~~~~

Objective met.

7.9.2.1-7
~~~~~~~~~

.. include:: ../partials/core-testing.rst

7.9.2.8
~~~~~~~

N/A; There is no system, only software requirements.

7.9.2.9
~~~~~~~

N/A; There is no architecture design.

7.9.2.10-13
~~~~~~~~

.. include:: ../partials/core-testing.rst

7.9.2.14
~~~~~~~~

N/A; Timing performance depends on the system requirements, which are unknown during the certification phase.

8.1-3
~~~~~

Covered by :ref:`safety-plan/project-setup:safety assessment`.
