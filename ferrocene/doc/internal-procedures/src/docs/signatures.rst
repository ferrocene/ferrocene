.. SPDX-License-Identifier: MIT OR Apache-2.0
   SPDX-FileCopyrightText: The Ferrocene Developers

Digital signatures
==================

All the qualification documents we send to TUV have to be digitally signed by
the responsible parties, to attest they were reviewed and to prevent accidental
changes to the documents (which would require TUV to review the documents
again).

The Ferrocene QMS documentation also needs to be digitally signed by
responsible parties to attest that their contents are up to date and represent
the latest applicable procedures to be applied throughout the organization.

Signing documents
-----------------

We developed a small wrapper around the "cosign" tool to make it easy to
sign our qualification documents.

To sign a document, you need to run this command inside of
``ferrocene/ferrocene``:

.. code-block:: text

   ./x sign $path

For example:

.. code-block:: text

   ./x sign ferrocene/doc/evaluation-report

Running the command will:

* Build the document locally to calculate its document ID and the hash of the
  generated files.

* Download the expected version of cosign, if it was not downloaded before.

* Invoke cosign to digitally sign the document metadata gathered earlier.

When cosign is invoked, you will need to:

* Agree to your company email address being published in the Rektor transparency
  log.

* In the browser window that opened, select "Microsoft".

* Authenticate with your company email credentials.

This will generate an ephemeral code signing certificate for your company email
address and sign the contents of the document with it. Once that's done, commit
the new files generated by the signing tool.

Verifying signatures
--------------------

You can verify that all the present signatures are still valid with this
command:

.. code-block:: text

   ./x test ferrocene-check-document-signatures

.. Note::
   When running the command locally, you might get signature verification errors
   if some of the cached pages built locally are out of date. To fix them,
   remove the ``build/`` directory.

It is also possible to inspect the ephemeral code signing certificate of a
signature with this command:

.. code-block:: text

   jq .cert $path/signature/$role.cosign-bundle -r | base64 -d | openssl x509 -text
