.. SPDX-License-Identifier: MIT OR Apache-2.0
   SPDX-FileCopyrightText: The Ferrocene Developers

Validation Process
==================

.. figure:: figures/validation-process.svg

   Validation Process

As described in the picture above, the validation process starts with the
results of the Evaluation Report. After the analysis of the software tool
identified the use cases and the potential errors, we determined the Tool
Confidence Level and then the validation method used for this qualification.

The validation process shall demonstrate that all the potential errors have been
identified for the use case described in the Evaluation Report HazOp analysis.
These errors will either be covered by a test which ensures that they are not
present in the final product, or means of mitigating their effects have been
identified (see Evaluation Report Tool Analysis for further details).


Validation Strategy
-------------------

The general validation strategy employed across the Ferrocene processes is to
use a trusted CI infrastructure to thoroughly test a PR, to prevent the merge of
a PR that would otherwise violate the "always green" invariant of the Ferrocene
Git repository, and to maintain logs and artifacts for every single activity
that was performed for some Ferrocene process.

The Ferrocene CI infrastructure implements the general validation strategy, and
in addition allows a Ferrocene developer to stop any phase of any Ferrocene
process, and to examine any log at any point during the span of an activity.

The following sections describe how the various Ferrocene processes are
validated.


Development Validation
----------------------

The validation of the development process is performed through the feedback and
analysis of the Ferrocene test suites.

If the Ferrocene CI infrastructure reports a “success” status for a PR, then the
author of the PR can consider the PR as validated. The author is not required to
review the logs, but may still choose to do so. The logs are kept as proof that
the PR conforms to applicable requirements, and that its merge has been
validated.

However, if the Ferrocene CI infrastructure reports a “failed” status for a PR,
the author must manually evaluate the logs. Once confidence is reestablished
after the manual evaluation, the Ferrocene test suites are executed again. In
this case, the PR is validated only when the author of the PR and the Reviewer
have validated the fix, and the Ferrocene CI infrastructure has reported a
“success” status. All logs are kept and stored with the associated analysis and
justification.


Documentation Validation
------------------------

Similar to the development validation, the documentation process is assessed
through the Ferrocene CI infrastructure. The content of the document is
validated in the review process described in :ref:`documentation:Documentation
Process`.

In addition to the review process, a member of the certification team for
certification or qualification documents, or a member of the development team
for technical documents (see :doc:`qualification-plan:organization` for details)
performs a manual sanity check on the document before each release. This
validates that there are no unexpected visual problems with the end product
and ensures that the automations have been successful.


Testing Validation
------------------

The validation of the testing process is performed by analyzing the
testing-related logs generated by the Ferrocene CI infrastructure.

If the Ferrocene CI infrastructure reports a "success" status for a PR, the
author of the PR is not required to review the testing-related logs. The
testing-related logs are kept as proof that the PR passes all tests.

However, if the Ferrocene CI infrastructure reports a "failed" status for a PR,
the author of the PR must review the testing-related logs, identify the failed
tests, and investigate the cause for the failure.


Packaging Validation
--------------------

The validation of the packaging process is performed by examining the contents
of the artifact storage location for a particular PR.

To validate a package for PR ``abcdef``, a Ferrocene engineer checks that
artifact storage location ``s3://ferrocene-ci-artifacts/ferrocene/dist``
contains subdirectory ``abcdef``.

Note that the contents of the tarballs are further validated as part of the
:ref:`release:Release Process`.

If any of these checks are not satisfied, a Ferrocene engineer investigates the
causes for the packaging issue. The traceability of this work is captured in a
GitHub issue with the "Packaging" label.


Release Validation
------------------

The validation of the release process is only applicable to the stable release
channel. As indicated in :ref:`release:Release Process`, there are no stability or
functionality guarantees in the other release channels as they are not
production environments.

To validate a release, the Release Manager examines the following release
artifacts:

* The manifest of the release. The Release Manager validates the manifest only
  if it is complete, consistent with the intent of the release, and does not
  list unwanted items.

* The contents of the release. The Release Manager validates the contents of the
  release only when they correspond to the items listed in the manifest.

* The checksum of the release. The Release Manager validates the checksum only
  when it corresponds to an expected checksum.

* The KPs of the release. The Release Manager validates the KPs only when the
  KPs are current and each one has a title, description, workaround, and
  detection.

If any of these artifacts is not satisfactory, the release is delayed until all
problems are resolved. The traceability of this work is captured in a GitHub
issue with the “Release” label.
