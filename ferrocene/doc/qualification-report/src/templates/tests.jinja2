{# SPDX-License-Identifier: MIT OR Apache-2.0 #}
{# SPDX-FileCopyrightText: The Ferrocene Developers #}

{% macro no_outcomes_error() %}
.. error::

   The ``ferrocene.test-outcomes`` setting in ``config.toml`` was not set.
   The test outcomes won't be populated until you configure it.
{% endmacro %}

{% macro invocations_summary(bootstrap_type, only_match_root_node=False) %}
{% if platform_outcomes is none %}
{{ no_outcomes_error() }}
{% else %}
{% for invocation in platform_outcomes.filter_invocations(bootstrap_type, only_match_root_node=only_match_root_node) %}
.. list-table::

   {% if invocation.is_compiletest() %}
   * - Compiletest suite:
     - ``{{ invocation.kind.suite }}``
   {% if invocation.kind.mode is not none %}
   * - Compiletest mode:
     - ``{{ invocation.kind.mode }}``
   {% endif %}
   {% elif invocation.is_cargo_package() %}
   * - Tested crates:
     - {% for crate in invocation.kind.crates %}{% if not loop.first %}, {% endif %}``{{ crate }}``{% endfor %}
   {% endif %}
   * - Host compiler:
     - ``{{ invocation.host }}`` (stage {{ invocation.stage }})
   * - Target:
     - ``{{ invocation.target }}``
   * - Total tests:
     - {{ invocation.total_tests() }}
   * - Passed tests:
     - {{ invocation.passed_tests }}
   * - Failed tests:
     - {{ invocation.failed_tests }}
   * - Ignored tests:
     - {{ invocation.ignored_tests }}
{% endfor %}
{% endif %}
{% endmacro %}

{{ "=" * 256 }} {# Sphinx requires the line to be at least as long as the title #}
:target:`{{ target }}`
{{ "=" * 256 }} {# Sphinx requires the line to be at least as long as the title #}

Testing scope
=============

For this qualification, testing is restricted to the following environments:

.. list-table::

   * - Host platform:
     - :target-with-triple:`{{ host }}`
   * - Compilation target:
     - :target-with-triple:`{{ target }}`
   * - Supported languages:
     - Rust

.. note::

   Only the Rust language, as described in the :doc:`specification:index`, is verified.

{% if bare_metal_test_target %}
Bare metal testing
------------------

The :target:`{{ target }}` Ferrocene target is meant to be used in an
environment without any operating system. Consequently, it does not include
APIs relying on one (as part of the ``std`` crate).

Rust's test suites require those APIs to be available in order to invoke the
tests themselves and to report the execution results. To solve the issue, a new
target, based on the existing Rust ``{{ target }}`` target, was created called
``{{ bare_metal_test_target }}``.

This target is strictly internal, and will not be released to customers. It has
the same configuration as the ``{{ target }}`` target, with the only exception
being enabling the operating system bindings for Linux (the OS used to execute
the test suite).

Since the only difference between the two targets is the APIs in the ``std``
crate, which is not present in the ``{{ target }}`` target (and consequently
not shipped to customers), we can conclude that the test results of
``{{ bare_metal_test_target }}`` are also valid for ``{{ target }}``.
{% endif %}

Release Notes
-------------

The |ferrocene_version| version of the Ferrocene toolset contains the following
tools:

.. list-table::
   :header-rows: 1

   * - Tool
     - Version
   * - Cargo
     - |rust_version|
   * - rustc
     - |rust_version|
   * - rustdoc
     - |rust_version|

Test results
============

The following are the results of the Ferrocene test suites. For further
details of each test suite, refer to
:doc:`Evaluation Report : Qualification Method <evaluation-report:method>`.

Compiletest Test Suite
----------------------

{{ invocations_summary("bootstrap::core::build_steps::test::Compiletest") }}

{% if host != target %}
.. note::

   The following test suites are not executed on :target:`{{ target }}`, as it
   is not a host platform:

   .. list-table::
      :header-rows: 1

      * - Test suite
        - Purpose
      * - ``Pretty``
        - Tests the compiler's pretty printing.
      * - ``RunMakeFullDeps``, ``UiFullDeps``
        - Tests the compiler binary's invocation.
      * - ``Rustdoc``, ``RustdocJson``, ``RustdocUi``
        - Tests the documentation generator.
{% endif %}

{% if remote_testing %}
.. note::

   The following test suites are not executed on :target:`{{ target }}` as they
   require the tests to be executed on the CI machine, while we execute the
   tests in a remote machine:

   .. list-table::
      :header-rows: 1

      * - Test suite
        - Purpose
      * - ``Debuginfo``
        - Tests the interactions of debuggers with the compiled program.
{% endif %}

Library Test Suite
------------------

.. FIXME: due to how the bootstrap code works, we're forced to match only the
   root node, otherwise we'd also match other tests invoking Crate down their
   dependency chain.

{{ invocations_summary("bootstrap::core::build_steps::test::Crate", only_match_root_node=True) }}

.. note::

   The library test suite uses the ``stage1`` library because a ``stage2``
   library is never built, and the ``stage2`` Ferrocene compiler reuses the
   ``stage1`` library.

{% if bare_metal_test_target %}
.. note::

   The ``std`` crate is not tested on :target:`{{ target }}` because it is not
   available on bare metal targets.
{% endif %}

Compiler Test Suite
-------------------

{{ invocations_summary("bootstrap::core::build_steps::test::CrateLibrustc") }}

{% if host != target %}
.. note::

   The compiler test suite is not tested on :target:`{{ target }}`, as it is not
   a host platform.
{% endif %}

Linkchecker Test Suite
----------------------

The linkchecker test suite is a pass/fail test suite integrated into the
Ferrocene CI infrastructure.

The linkchecker test suite is verified as part of :ref:`testing:Test Phase 2:
Full Testing and Merge`. As indicated in :doc:`Qualification Plan : Development
Process <qualification-plan:development>`, a PR is merged into the repository
only when it passes full testing.

As a result, the linkchecker test suite reports a **pass** for this
qualification.

Build System Test Suite
-----------------------

{{ invocations_summary("bootstrap::core::build_steps::test::Bootstrap") }}

Tidy Test Suite
---------------

The tidy test suite is a pass/fail test suite integrated into the Ferrocene
CI infrastructure.

The tidy test suite is verified as part of :ref:`testing:Test Phase 2: Full
Testing and Merge`. As indicated in :doc:`Qualification Plan : Development
Process <qualification-plan:development>`, a PR is merged into the repository
only when it passes full testing.

As a result, the tidy test suite reports a **pass** for this qualification.

Known Problems
==============

KPs identified through the lifecycle of Ferrocene for :target:`{{ target }}`
are tracked in the :doc:`safety-manual:known-problems`. This document is made
available to customers for consulting.

Ignored Tests
=============

{% if platform_outcomes is none %}
{{ no_outcomes_error() }}
{% elif platform_outcomes.ignored_tests %}
The following table presents the {{ platform_outcomes.ignored_tests|length }}
tests that were ignored by our infrastructure for :target:`{{ target }}`, along
with the reason as to why they were ignored.

.. list-table::
   :header-rows: 1

   * - Test name
     - Ignore reason
   {% for test in platform_outcomes.ignored_tests %}
   * - ``{{ test.name }}``
     - {% if test.reason %}{{ test.reason }}{% else %}*No reason provided.*{% endif %}
   {% endfor %}
{% else %}
No tests were ignored by our infrastructure for :target:`{{ target }}`.
{% endif %}

{% if platform_outcomes.ignored_doc_tests %}
.. note::

   The {{ platform_outcomes.ignored_doc_tests|length }} ignored documentation
   tests are **not** included here.

   Rust's documentation and testing tooling considers all snippets of code in
   the generated documentation to be a test by default, and snippets that are
   not meant to be valid Rust code (or Rust code at all) would cause test
   failures if not ignored explicitly.

   Because of that, we don't consider ignored documentation tests to be valid
   tests that were skipped by our testing infrastructure: we consider them not
   to be tests at all.
{% endif %}
