error[E0782]: trait objects must include the `dyn` keyword
  --> $DIR/dyn-2021-edition-error.rs:3:17
   |
LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {
   |                 ^^^^^^^^^
   |
help: use a new generic type parameter, constrained by `SomeTrait`
   |
LL | fn function<T: SomeTrait>(x: &T, y: Box<SomeTrait>) {
   |            ++++++++++++++     ~
help: you can also use an opaque type, but users won't be able to specify the type parameter when calling the `fn`, having to rely exclusively on type inference
   |
LL | fn function(x: &impl SomeTrait, y: Box<SomeTrait>) {
   |                 ++++
help: alternatively, use a trait object to accept any type that implements `SomeTrait`, accessing its methods at runtime using dynamic dispatch
   |
LL | fn function(x: &dyn SomeTrait, y: Box<SomeTrait>) {
   |                 +++

error[E0782]: trait objects must include the `dyn` keyword
  --> $DIR/dyn-2021-edition-error.rs:3:35
   |
LL | fn function(x: &SomeTrait, y: Box<SomeTrait>) {
   |                                   ^^^^^^^^^
   |
help: add `dyn` keyword before this trait
   |
LL | fn function(x: &SomeTrait, y: Box<dyn SomeTrait>) {
   |                                   +++

error[E0782]: trait objects must include the `dyn` keyword
  --> $DIR/dyn-2021-edition-error.rs:6:14
   |
LL |     let _x: &SomeTrait = todo!();
   |              ^^^^^^^^^
   |
help: add `dyn` keyword before this trait
   |
LL |     let _x: &dyn SomeTrait = todo!();
   |              +++

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0782`.
