warning: temporary lifetime will be shortened in Rust 1.92
  --> $DIR/user-defined-macros.rs:31:19
   |
LL |     ($arg:expr) => { { &$arg } }
   |                              - ...which will be dropped at the end of this block in Rust 1.92
...
LL |             wrap!(String::new())
   |                   ^^^^^^^^^^^^^ this expression creates a temporary value...
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see <https://doc.rust-lang.org/rustc/lints/listing/warn-by-default.html#macro-extended-temporary-scopes>
   = note: consider using a `let` binding to create a longer lived value
   = note: some temporaries were previously incorrectly lifetime-extended since Rust 1.89 in formatting macros, and since Rust 1.88 in `pin!()`
   = note: `#[warn(macro_extended_temporary_scopes)]` (part of `#[warn(future_incompatible)]`) on by default

warning: temporary lifetime will be shortened in Rust 1.92
  --> $DIR/user-defined-macros.rs:15:42
   |
LL |     ($arg:expr) => { { &$arg } }
   |                              - ...which will be dropped at the end of this block in Rust 1.92
...
LL |     () => { println!("{:?}{}", (), wrap!(String::new())) }
   |                                          ^^^^^^^^^^^^^ this expression creates a temporary value...
...
LL |     print_with_internal_wrap!();
   |     --------------------------- in this macro invocation
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see <https://doc.rust-lang.org/rustc/lints/listing/warn-by-default.html#macro-extended-temporary-scopes>
   = note: consider using a `let` binding to create a longer lived value
   = note: some temporaries were previously incorrectly lifetime-extended since Rust 1.89 in formatting macros, and since Rust 1.88 in `pin!()`
   = note: this warning originates in the macro `print_with_internal_wrap` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: temporary lifetime will be shortened in Rust 1.92
  --> $DIR/user-defined-macros.rs:47:32
   |
LL |         external_macros::wrap!(String::new())
   |         -----------------------^^^^^^^^^^^^^-
   |         |                      |
   |         |                      this expression creates a temporary value...
   |         ...which will be dropped at the end of this block in Rust 1.92
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see <https://doc.rust-lang.org/rustc/lints/listing/warn-by-default.html#macro-extended-temporary-scopes>
   = note: consider using a `let` binding to create a longer lived value
   = note: some temporaries were previously incorrectly lifetime-extended since Rust 1.89 in formatting macros, and since Rust 1.88 in `pin!()`

warning: temporary lifetime will be shortened in Rust 1.92
  --> $DIR/user-defined-macros.rs:52:5
   |
LL |     external_macros::print_with_internal_wrap!();
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |     |
   |     this expression creates a temporary value...
   |     ...which will be dropped at the end of this block in Rust 1.92
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see <https://doc.rust-lang.org/rustc/lints/listing/warn-by-default.html#macro-extended-temporary-scopes>
   = note: consider using a `let` binding to create a longer lived value
   = note: some temporaries were previously incorrectly lifetime-extended since Rust 1.89 in formatting macros, and since Rust 1.88 in `pin!()`
   = note: this warning originates in the macro `external_macros::print_with_internal_wrap` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: 4 warnings emitted

