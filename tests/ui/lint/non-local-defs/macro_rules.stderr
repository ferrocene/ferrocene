warning: non-local `macro_rules!` definition, they should be avoided as they go against expectation
  --> $DIR/macro_rules.rs:12:5
   |
LL |     macro_rules! m0 { () => { } };
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: remove the `#[macro_export]` or move this `macro_rules!` outside the of the current constant `B`
   = note: a `macro_rules!` definition is non-local if it is nested inside an item and has a `#[macro_export]` attribute
   = note: one exception to the rule are anon-const (`const _: () = { ... }`) at top-level module
   = note: this lint may become deny-by-default in the edition 2024 and higher, see the tracking issue <https://github.com/rust-lang/rust/issues/120363>
note: the lint level is defined here
  --> $DIR/macro_rules.rs:6:9
   |
LL | #![warn(non_local_definitions)]
   |         ^^^^^^^^^^^^^^^^^^^^^

warning: non-local `macro_rules!` definition, they should be avoided as they go against expectation
  --> $DIR/macro_rules.rs:18:1
   |
LL | non_local_macro::non_local_macro_rules!(my_macro);
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: remove the `#[macro_export]` or move this `macro_rules!` outside the of the current constant `_MACRO_EXPORT`
   = note: a `macro_rules!` definition is non-local if it is nested inside an item and has a `#[macro_export]` attribute
   = note: one exception to the rule are anon-const (`const _: () = { ... }`) at top-level module
   = note: this lint may become deny-by-default in the edition 2024 and higher, see the tracking issue <https://github.com/rust-lang/rust/issues/120363>
   = note: the macro `non_local_macro::non_local_macro_rules` may come from an old version of the `non_local_macro` crate, try updating your dependency with `cargo update -p non_local_macro`
   = note: this warning originates in the macro `non_local_macro::non_local_macro_rules` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: non-local `macro_rules!` definition, they should be avoided as they go against expectation
  --> $DIR/macro_rules.rs:23:5
   |
LL |     macro_rules! m { () => { } };
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: remove the `#[macro_export]` or move this `macro_rules!` outside the of the current function `main`
   = note: a `macro_rules!` definition is non-local if it is nested inside an item and has a `#[macro_export]` attribute
   = note: one exception to the rule are anon-const (`const _: () = { ... }`) at top-level module
   = note: this lint may become deny-by-default in the edition 2024 and higher, see the tracking issue <https://github.com/rust-lang/rust/issues/120363>

warning: non-local `macro_rules!` definition, they should be avoided as they go against expectation
  --> $DIR/macro_rules.rs:31:13
   |
LL |             macro_rules! m2 { () => { } };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: remove the `#[macro_export]` or move this `macro_rules!` outside the of the current associated function `bar` and up 2 bodies
   = note: a `macro_rules!` definition is non-local if it is nested inside an item and has a `#[macro_export]` attribute
   = note: one exception to the rule are anon-const (`const _: () = { ... }`) at top-level module
   = note: this lint may become deny-by-default in the edition 2024 and higher, see the tracking issue <https://github.com/rust-lang/rust/issues/120363>

warning: 4 warnings emitted

