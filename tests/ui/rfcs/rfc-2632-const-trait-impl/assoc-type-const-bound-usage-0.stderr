error: using `#![feature(effects)]` without enabling next trait solver globally
   |
   = note: the next trait solver must be enabled globally for the effects feature to work correctly
   = help: use `-Znext-solver` to enable

error[E0277]: the trait bound `<T as Trait>::Assoc: Trait` is not satisfied
  --> $DIR/assoc-type-const-bound-usage-0.rs:13:5
   |
LL |     T::Assoc::func()
   |     ^^^^^^^^ the trait `Trait` is not implemented for `<T as Trait>::Assoc`
   |
note: required by a bound in `Trait::func`
  --> $DIR/assoc-type-const-bound-usage-0.rs:6:1
   |
LL | #[const_trait]
   | ^^^^^^^^^^^^^^ required by this bound in `Trait::func`
...
LL |     fn func() -> i32;
   |        ---- required by a bound in this associated function
help: consider further restricting the associated type
   |
LL | const fn unqualified<T: ~const Trait>() -> i32 where <T as Trait>::Assoc: Trait {
   |                                                ++++++++++++++++++++++++++++++++

error[E0277]: the trait bound `<T as Trait>::Assoc: Trait` is not satisfied
  --> $DIR/assoc-type-const-bound-usage-0.rs:17:5
   |
LL |     <T as Trait>::Assoc::func()
   |     ^^^^^^^^^^^^^^^^^^^ the trait `Trait` is not implemented for `<T as Trait>::Assoc`
   |
note: required by a bound in `Trait::func`
  --> $DIR/assoc-type-const-bound-usage-0.rs:6:1
   |
LL | #[const_trait]
   | ^^^^^^^^^^^^^^ required by this bound in `Trait::func`
...
LL |     fn func() -> i32;
   |        ---- required by a bound in this associated function
help: consider further restricting the associated type
   |
LL | const fn qualified<T: ~const Trait>() -> i32 where <T as Trait>::Assoc: Trait {
   |                                              ++++++++++++++++++++++++++++++++

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0277`.
