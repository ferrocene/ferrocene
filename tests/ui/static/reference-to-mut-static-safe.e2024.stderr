error[E0796]: creating a shared reference to a mutable static
  --> $DIR/reference-to-mut-static-safe.rs:9:14
   |
LL |     let _x = &X;
   |              ^^ shared reference to mutable static
   |
   = note: this shared reference has lifetime `'static`, but if the static ever gets mutated, or a mutable reference is created, then any further use of this shared reference is Undefined Behavior
help: use `addr_of!` instead to create a raw pointer
   |
LL |     let _x = addr_of!(X);
   |              ~~~~~~~~~ +

error[E0133]: use of mutable static is unsafe and requires unsafe block
  --> $DIR/reference-to-mut-static-safe.rs:9:15
   |
LL |     let _x = &X;
   |               ^ use of mutable static
   |
   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0133, E0796.
For more information about an error, try `rustc --explain E0133`.
