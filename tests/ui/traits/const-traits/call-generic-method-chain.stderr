warning: the feature `effects` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/call-generic-method-chain.rs:7:30
   |
LL | #![feature(const_trait_impl, effects)]
   |                              ^^^^^^^
   |
   = note: see issue #102090 <https://github.com/rust-lang/rust/issues/102090> for more information
   = note: `#[warn(incomplete_features)]` on by default

error: const `impl` for trait `PartialEq` which is not marked with `#[const_trait]`
  --> $DIR/call-generic-method-chain.rs:11:12
   |
LL | impl const PartialEq for S {
   |            ^^^^^^^^^
   |
   = note: marking a trait with `#[const_trait]` ensures all default method bodies are `const`
   = note: adding a non-const method body in the future would be a breaking change

error: `~const` can only be applied to `#[const_trait]` traits
  --> $DIR/call-generic-method-chain.rs:20:32
   |
LL | const fn equals_self<T: ~const PartialEq>(t: &T) -> bool {
   |                                ^^^^^^^^^

error: `~const` can only be applied to `#[const_trait]` traits
  --> $DIR/call-generic-method-chain.rs:20:32
   |
LL | const fn equals_self<T: ~const PartialEq>(t: &T) -> bool {
   |                                ^^^^^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: `~const` can only be applied to `#[const_trait]` traits
  --> $DIR/call-generic-method-chain.rs:24:40
   |
LL | const fn equals_self_wrapper<T: ~const PartialEq>(t: &T) -> bool {
   |                                        ^^^^^^^^^

error: `~const` can only be applied to `#[const_trait]` traits
  --> $DIR/call-generic-method-chain.rs:24:40
   |
LL | const fn equals_self_wrapper<T: ~const PartialEq>(t: &T) -> bool {
   |                                        ^^^^^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: aborting due to 5 previous errors; 1 warning emitted

